// üöÄ SCRIPT D'INITIALISATION DES CONFIGURATIONS CYNTHIA
// Charge les configurations s√©par√©es pour Assistant et WebApp

(function() {
    console.log('üîß Initialisation des configurations Cynthia...');

    // Simuler le chargement des variables d'environnement
    // En production, ces valeurs viendraient du serveur
    window.ENV = {
        // Cl√©s OpenAI s√©par√©es
        CYNTHIA_ASSISTANT_OPENAI_KEY: 'CYNTHIA_ASSISTANT_OPENAI_KEY_HERE',
        CYNTHIA_WEBAPP_OPENAI_KEY: 'CYNTHIA_WEBAPP_OPENAI_KEY_HERE',
        
        // Configuration EmailJS
        EMAILJS_SERVICE_ID: 'service_cynthia_bernier',
        EMAILJS_TEMPLATE_ID: 'template_fiche_inscription', 
        EMAILJS_PUBLIC_KEY: 'your_emailjs_public_key_here',
        
        // Informations Cynthia
        CYNTHIA_EMAIL: 'cynthia.bernier@courtiercynthia.com',
        CYNTHIA_NAME: 'Cynthia Bernier',
        
        // Environnements
        APP_ENV: 'development',
        APP_VERSION: '1.0.0',
        WEBAPP_ENV: 'development',
        WEBAPP_VERSION: '1.0.0'
    };

    // Fonction pour v√©rifier la s√©paration des APIs
    window.checkAPIsSeparation = function() {
        console.log('üîç V√©rification de la s√©paration des APIs...');
        
        const results = {
            assistantConfigured: false,
            webappConfigured: false,
            keysSeparated: false,
            status: 'error'
        };

        try {
            // V√©rifier Assistant Config
            if (window.AppConfig && window.AppConfig.get('openai.apiKey')) {
                const assistantKey = window.AppConfig.get('openai.apiKey');
                results.assistantConfigured = !assistantKey.includes('HERE');
                console.log('üìã Assistant API Key:', assistantKey.substring(0, 20) + '...');
            }

            // V√©rifier WebApp Config  
            if (window.WebAppConfig && window.WebAppConfig.getOpenAIKey()) {
                const webappKey = window.WebAppConfig.getOpenAIKey();
                results.webappConfigured = !webappKey.includes('HERE');
                console.log('üåê WebApp API Key:', webappKey.substring(0, 20) + '...');
            }

            // V√©rifier que les cl√©s sont diff√©rentes
            if (results.assistantConfigured && results.webappConfigured) {
                const assistantKey = window.AppConfig.get('openai.apiKey');
                const webappKey = window.WebAppConfig.getOpenAIKey();
                results.keysSeparated = assistantKey !== webappKey;
            }

            if (results.assistantConfigured && results.webappConfigured && results.keysSeparated) {
                results.status = 'success';
                console.log('‚úÖ APIs correctement s√©par√©es !');
            } else {
                results.status = 'partial';
                console.log('‚ö†Ô∏è Configuration incompl√®te - APIs partiellement s√©par√©es');
            }

        } catch (error) {
            console.error('‚ùå Erreur lors de la v√©rification:', error);
            results.status = 'error';
        }

        return results;
    };

    // Fonction pour afficher le statut des configurations
    window.showConfigStatus = function() {
        const status = window.checkAPIsSeparation();
        
        let message = 'üîß STATUT DES CONFIGURATIONS CYNTHIA\\n\\n';
        
        message += `Assistant API: ${status.assistantConfigured ? '‚úÖ Configur√©' : '‚ùå Non configur√©'}\\n`;
        message += `WebApp API: ${status.webappConfigured ? '‚úÖ Configur√©' : '‚ùå Non configur√©'}\\n`;
        message += `Cl√©s s√©par√©es: ${status.keysSeparated ? '‚úÖ Oui' : '‚ùå Non'}\\n\\n`;
        
        switch (status.status) {
            case 'success':
                message += 'üéâ EXCELLENT ! Les deux APIs sont correctement configur√©es avec des cl√©s s√©par√©es.';
                break;
            case 'partial':
                message += '‚ö†Ô∏è ATTENTION ! Configuration incompl√®te. V√©rifiez vos cl√©s OpenAI.';
                break;
            case 'error':
                message += '‚ùå ERREUR ! Probl√®me dans la configuration des APIs.';
                break;
        }

        alert(message);
        return status;
    };

    // Fonction pour configurer rapidement les cl√©s (d√©veloppement uniquement)
    window.quickConfigureKeys = function(assistantKey, webappKey) {
        if (assistantKey) {
            window.ENV.CYNTHIA_ASSISTANT_OPENAI_KEY = assistantKey;
        }
        if (webappKey) {
            window.ENV.CYNTHIA_WEBAPP_OPENAI_KEY = webappKey;
        }
        
        // Recharger les configurations
        if (window.AppConfig) {
            window.AppConfig.loadConfig();
        }
        if (window.WebAppConfig) {
            window.WebAppConfig.loadConfig();
        }
        
        console.log('üîÑ Cl√©s mises √† jour, configurations recharg√©es');
        return window.checkAPIsSeparation();
    };

    // Fonction d'aide pour les d√©veloppeurs
    window.helpConfigureCynthia = function() {
        console.log(`
üöÄ AIDE CONFIGURATION CYNTHIA BERNIER

1. S√âPARER LES CL√âS OPENAI :
   - Assistant : pour analyse des fiches immobili√®res
   - WebApp : pour g√©n√©ration d'emails et templates

2. CONFIGURER EN D√âVELOPPEMENT :
   window.quickConfigureKeys('sk-assistant-...', 'sk-webapp-...');

3. V√âRIFIER LA CONFIGURATION :
   window.showConfigStatus();

4. EN PRODUCTION :
   - Configurez les variables d'environnement
   - Utilisez des cl√©s OpenAI distinctes
   - S√©curisez les cl√©s c√¥t√© serveur

5. STRUCTURE DES FICHIERS :
   - docs/assistant/ : Configuration Assistant API
   - docs/webapp/ : Configuration WebApp API
   - docs/.env.example : Mod√®le de variables
        `);
    };

    console.log('‚úÖ Script d\'initialisation charg√©');
    console.log('üí° Tapez window.helpConfigureCynthia() pour obtenir de l\'aide');

})();